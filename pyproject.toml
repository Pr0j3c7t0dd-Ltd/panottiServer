[tool.poetry]
name = "panotti-server"
version = "1.0.0"
description = "Recording Events API Server"
authors = ["Your Name <your.email@example.com>"]
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.109.0"
uvicorn = {extras = ["standard"], version = "^0.27.0"}
gunicorn = "^21.2.0"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
python-multipart = "^0.0.6"
python-dotenv = "^1.0.0"
httpx = "^0.26.0"
typing-extensions = "^4.9.0"
requests = "^2.31.0"
pydantic = {extras = ["typing"], version = "^2.5.3"}
PyYAML = "^6.0.1"
structlog = "^24.1.0"
python-json-logger = "^2.0.7"
aiosqlite = "^0.19.0"
asyncio = "^3.4.3"
watchdog = "^3.0.0"
importlib-metadata = "^7.0.1"
numpy = "^1.24.0"
scipy = "^1.10.0"
sqlalchemy = "^2.0.23"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-cov = "^4.1.0"
black = "^23.12"
isort = "^5.13"
ruff = "^0.1.9"
mypy = "^1.8.0"
pylint = "^3.0"
flake8 = "^6.1.0"
pre-commit = "^4.0.1"
types-pyyaml = "^6.0.12.20241230"
types-requests = "^2.32.0.20241016"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py312']

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.mypy]
python_version = "3.12"
plugins = ["pydantic.mypy"]
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

# Ignore certain errors in test files
[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

# Ignore missing imports for certain packages
[[tool.mypy.overrides]]
module = [
    "faster_whisper.*",
    "scipy.*",
    "numpy.*"
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pydantic.*"
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[[tool.mypy.overrides]]
module = "sqlalchemy.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "--cov=app --cov-report=term-missing"

[tool.ruff]
target-version = "py312"
line-length = 88

[tool.ruff.lint]
select = ["E", "F", "B", "I", "N", "UP", "PL", "RUF"]
ignore = ["PLR0913"]  # Ignore "too many arguments" for now

[tool.ruff.lint.per-file-ignores]
"test_*.py" = ["PLR2004"]  # Ignore magic numbers in test files
"app/tests/*" = ["PLR2004"]  # Ignore magic numbers in test files

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false

[tool.ruff.lint.pycodestyle]
max-line-length = 88

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`
keep-runtime-typing = true

[tool.bandit]
exclude_dirs = ["tests", "test_*"]
skips = ["B101", "B404", "B603", "B607"]
